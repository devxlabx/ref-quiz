name: CI Pipeline

on:
  push:
    branches:
      - main  # Déclenche le pipeline sur un push vers la branche principale

jobs:
  maven:
    runs-on: ubuntu-latest
    name: 🔨 Build avec Maven
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v2  # Récupérer le code du repository
        
      - name: ☕ Installer Java JDK 17 (Temurin)
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'  # Utiliser Temurin, la distribution JDK 17

      - name: 🔧 Compiler et construire avec Maven
        run: mvn -f refquiz-api/pom.xml clean install  # Exécuter Maven dans le bon dossier

  sonarqube:
    runs-on: ubuntu-latest
    needs: maven  # Ce job dépend du succès du job Maven
    name: 🔍 Analyse avec SonarQube
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4  # Récupérer le code du repository

      - name: ☕ Installer Java JDK 17 (Temurin)
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 📚 Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: 📚 Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: 🌟 Compiler le projet
        working-directory: refquiz-api
        run: mvn clean verify

      - name: 📊 Analyser avec SonarQube
        uses: SonarSource/sonarcloud-github-action@v2.2.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.sources=refquiz-api/src/main/java
            -Dsonar.tests=refquiz-api/src/test/java
            -Dsonar.java.binaries=refquiz-api/target/classes
            -Dsonar.junit.reportPaths=refquiz-api/target/surefire-reports
            -Dsonar.coverage.jacoco.xmlReportPaths=refquiz-api/target/site/jacoco/jacoco.xml

  codeql:
    runs-on: ubuntu-latest
    needs: sonarqube  # Ce job dépend du succès du job SonarQube
    name: 🔎 Analyse avec CodeQL
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v2  # Récupérer le code du repository

      - name: 🛠️ Configurer CodeQL
        uses: github/codeql-action/setup@v2  # Configurer l'action CodeQL

      - name: 🚀 Lancer l'analyse CodeQL
        uses: github/codeql-action/analyze@v2
        with:
          languages: java  
